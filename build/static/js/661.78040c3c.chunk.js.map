{"version":3,"file":"static/js/661.78040c3c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/UsersDialogs/Lilit/LilitDialog.module.css?3e6a","components/Dialogs/UsersDialogs/Lilit/LilitDialogs.jsx","webpack://my-app/./src/components/Dialogs/UsersDialogs/Lusine/LusineDialogs.module.css?a3b3","components/Dialogs/UsersDialogs/Lusine/LusineDialog.jsx","components/Dialogs/UsersDialogs/Lusine/LusineDialogContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Dialogs_container\":\"Dialog_Dialogs_container__6LnMv\",\"Dialogs\":\"Dialog_Dialogs__9+AQr\",\"Dialog\":\"Dialog_Dialog__PSHHU\",\"UserDialog\":\"Dialog_UserDialog__k9d0E\"};","import { NavLink } from 'react-router-dom';\nimport classes from './Dialog.module.css'\nimport React from 'react';\n\n\nconst Dialog = (props) => {\n\n    return (\n        <div className={classes.UserDialog}>\n            <img src=\"https://www.heurekalabs.org/content/images/2022/03/originalApe6808-1.png\" alt=\"\" />\n            <div className={classes.User}>\n                <NavLink to={\"dialogs/\" + props.id} className={classes.userName}>{props.userName}</NavLink>\n            \n            </div>\n        </div>\n    )\n}\n\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"Dialogs_container\":\"Dialogs_Dialogs_container__Rk5M2\",\"Dialogs\":\"Dialogs_Dialogs__ex7ps\",\"Dialog\":\"Dialogs_Dialog__-XrfB\",\"UserDialog\":\"Dialogs_UserDialog__LWgcr\"};","// extracted by mini-css-extract-plugin\nexport default {\"MessagesWrapper\":\"LilitDialog_MessagesWrapper__eUgH7\",\"Messages\":\"LilitDialog_Messages__nT-Kd\",\"input\":\"LilitDialog_input__tDJtp\"};","import classes from './LilitDialog.module.css'\nimport React from 'react';\n\n\n\nconst LilitDialog = (props) => {\n    let MessagesElements = props.DialogsPage.LilitMessages.map(message => message.message)\n    let newMessageText = props.DialogsPage.LilitnewMessageText\n    return (\n        <div className={classes.MessagesWrapper} >\n            <div className={classes.Messages}>\n                {MessagesElements}\n            </div>\n            <div className={classes.input}>\n                <input value={newMessageText} type=\"text\" name=\"\" id=\"\" />\n                <button>Send Message to Lilit</button>\n            </div>\n        </div >\n\n    )\n}\nexport default LilitDialog","// extracted by mini-css-extract-plugin\nexport default {\"Dialogs_container\":\"LusineDialogs_Dialogs_container__RUmU-\",\"Dialogs\":\"LusineDialogs_Dialogs__dnFv0\",\"Dialog\":\"LusineDialogs_Dialog__jqqDC\",\"UserDialog\":\"LusineDialogs_UserDialog__5HWen\",\"MessagesWrapper\":\"LusineDialogs_MessagesWrapper__5b18+\",\"Messages\":\"LusineDialogs_Messages__1ITXZ\",\"input\":\"LusineDialogs_input__6nq6E\"};","import { Formik } from 'formik';\nimport { addMessageActionCreator, onMessageChangeActionCreator } from '../../../../redux/reducers/DialogsReducer';\nimport classes from './LusineDialogs.module.css'\nimport React from 'react';\n\n\n\nconst LusineDialog = (props) => {\n    let MessagesElements = props.DialogsPage.LusineMessages.map(message => message.message)\n    let sendMessage = (text,id) => {\n        props.sendMessage({text,id})\n    }\n    return (\n        <div className={classes.MessagesWrapper} >\n            <div className={classes.Messages}>\n                {MessagesElements}\n            </div>\n                {/* <input onChange={onMessageChange} ref={abs} value={newMessageText} type=\"text\" name=\"\" id=\"\" />\n                <button onClick={sendMessage}> Send Message to Lusine</button> */}\n                <Formik Formik\n                initialValues={{ newMessageText: '', }}\n                onSubmit={(values, { setSubmitting },) => {\n                    return (\n                            sendMessage(values.newMessageText),\n                            values.newMessageText = '',\n                            setSubmitting(false)\n\n                    )\n                }}\n            >\n                {({\n\n                    values,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                }) => (\n                    <form onSubmit={handleSubmit}\n                    >\n                                    <div className={classes.input}>\n\n                        <input\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"newMessageText\"\n                            onBlur={handleBlur}\n                            value={values.newMessageText}\n                        />\n\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Submit\n                        </button>\n                        </div >\n\n                    </form>\n                )}\n            </Formik>\n            </div>\n\n    )\n}\nexport default LusineDialog","import { connect } from 'react-redux';\nimport { addMessageActionCreator } from '../../../../redux/reducers/DialogsReducer';\nimport LusineDialog from './LusineDialog';\n\n\n\n// const LusineDialogContainer = (props) => {\n\n//     const onMessageChange = (text) =>{\n//         props.dispatch(onMessageChangeActionCreator(text))\n//     }\n//     let sendMessage = (text,id) => {\n//         props.dispatch(addMessageActionCreator(text, id))\n\n//     }\n//     return (\n//         <LusineDialog onMessageChange ={onMessageChange} sendMessage = {sendMessage} DialogsPage = {props.DialogsPage}  />\n\n//     )\n// }\nlet mapStateToProps = (state) => {\n    return {\n        DialogsPage: state.DialogsPage,\n        newPostText:state.DialogsPage.LusinenewMessageText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (text, id) => {\n            dispatch(addMessageActionCreator(text, id))\n\n        },\n        // onMessageChange: (text) => {\n        //     dispatch(onMessageChangeActionCreator(text))\n            // no need for firmiik\n        // }\n    }\n}\n\n\nconst LusineDialogContainer = connect(mapStateToProps, mapDispatchToProps)(LusineDialog)\n\n\n\nexport default LusineDialogContainer","import { Route, Routes } from 'react-router-dom';\nimport Dialog from './Dialog/Dialog';\nimport classes from './Dialogs.module.css'\nimport React from 'react';\nimport LilitDialog from './UsersDialogs/Lilit/LilitDialogs';\nimport LusineDialogContainer from './UsersDialogs/Lusine/LusineDialogContainer';\n\n\n\nconst Dialogs = (props) => {\n    let DialogsELements = props.DialogsPage.Users.map(user => <Dialog key = {user.id} userName={user.name} id={user.id} />)\n    \n    return (\n        <div className={classes.Dialogs_container}>\n            <div className={classes.Dialogs}>\n                {DialogsELements}\n            </div>\n            <div className={classes.Dialog}>\n                <Routes>\n                    <Route  element={<LilitDialog dispatch = {props.dispatch}  DialogsPage = {props.DialogsPage} />} path='/dialogs/1'></Route>\n                    <Route  element={<LusineDialogContainer  />}path='/dialogs/2'></Route>\n                </Routes>\n            </div>\n        </div>\n\n    )\n}\nexport default Dialogs\n","import { connect } from \"react-redux\"\nimport Dialogs from \"./Dialogs\"\nimport { WithoutRedirectComponent } from \"../HOC/redirectComponent\"\nimport { compose } from \"redux\"\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        DialogsPage: state.DialogsPage,\n    }\n}\n\n \n\n\nconst DialogsContainer = compose(\n    connect(mapStateToProps),\n    WithoutRedirectComponent\n    )(Dialogs)\n\n\nexport default DialogsContainer"],"names":["props","_jsxs","className","classes","children","_jsx","src","alt","NavLink","to","id","userName","MessagesElements","DialogsPage","LilitMessages","map","message","newMessageText","LilitnewMessageText","value","type","name","LusineMessages","Formik","initialValues","onSubmit","values","_ref","text","setSubmitting","sendMessage","_ref2","handleChange","handleBlur","handleSubmit","isSubmitting","onChange","onBlur","disabled","connect","state","newPostText","LusinenewMessageText","dispatch","addMessageActionCreator","LusineDialog","DialogsELements","Users","user","Dialog","Routes","Route","element","LilitDialog","path","LusineDialogContainer","compose","WithoutRedirectComponent","Dialogs"],"sourceRoot":""}
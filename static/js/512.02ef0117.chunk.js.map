{"version":3,"file":"static/js/512.02ef0117.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Posts/myPosts.module.css?1a98","webpack://my-app/./src/components/Profile/Posts/post/Posts.module.css?3f9b","components/Profile/Posts/post/Posts.jsx","components/Profile/Posts/myPosts.jsx","components/Profile/Posts/myPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/Profile.container.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"myPosts_posts__EZz0X\",\"item\":\"myPosts_item__MLKyX\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Posts_item__MFm8n\"};","import React from 'react';\nimport classes from './Posts.module.css'\nconst Post = (props) => {\n    return (\n            <div className={classes.item}>\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Default_pfp.svg/2048px-Default_pfp.svg.png\" alt=\"\" />\n                {props.post}\n                            </div>\n\n    )\n}\nexport default Post","import React from 'react';\nimport classes from './myPosts.module.css'\nimport Post from './post/Posts';\nimport { Formik } from 'formik';\n// import * as Yup from 'yup';\n\n\nconst MyPosts = (props) => {\n    let postElements = [...props.ProfilePage.Posts].reverse().map(p => <Post key={p.id} post={p.message} id={p.id} />)\n    let addPost = (text) => {\n        props.addNewPost(text)\n\n\n    }\n    // const DisplayingErrorMessagesSchema = Yup.object().shape({\n    //     newPostText: Yup.string()\n    //         .max(50, 'Too Long!')\n\n    // });\n\n    return (\n        <div className={classes.posts}>\n            {postElements}\n            {/* <input type=\"text\" onChange={onPostChange} value={props.newPostText} />\n            <button onClick={addPost}>Add Post</button> */}\n\n            <Formik Formik\n                initialValues={{ newPostText: '', }}\n                onChange={() => {\n                    return (\n                        console.log('aosidj'))\n                }}\n                onSubmit={(values, { setSubmitting },) => {\n                    return (\n                        addPost(values.newPostText),\n                        values.newPostText = '',\n                        setSubmitting(false)\n\n                    )\n                }}\n            >\n                {({\n\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                }) => (\n                    <form onSubmit={handleSubmit}\n                    >\n                        <input\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"newPostText\"\n                            onBlur={handleBlur}\n                            value={values.newPostText}\n                        />\n                        {errors.newPostText && touched.newPostText && errors.newPostText}\n\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            Submit\n                        </button>\n                    </form>\n                )}\n            </Formik>\n\n\n\n\n        </div>\n    )\n}\nexport default MyPosts","import React from 'react';\n\nimport { addPostActionCreator } from '../../../redux/reducers/ProfileReducer';\nimport { onPostChangeActionCreator } from '../../../redux/reducers/ProfileReducer';\nimport MyPosts from './myPosts';\nimport { connect } from 'react-redux';\n\n// const MyPostsContainer = (props) => {\n//     let ProfilePage = props.ProfilePage\n//     let dispatch = props.dispatch\n//     let addPost = (text) => {\n//         dispatch(addPostActionCreator(text));\n//     }\n//     let onPostChange = (text) => {\n//         dispatch(onPostChangeActionCreator(text))\n\n//     }\n//     return (\n//         <MyPosts addNewPost={addPost} updateNewPostMessage={onPostChange} ProfilePage={ProfilePage}\n//         />\n//     )\n// }\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        ProfilePage: state.ProfilePage,\n        newPostText: state.ProfilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addNewPost: (text) => {\n            dispatch(addPostActionCreator(text));\n\n        },\n        // updateNewPostMessage: (text) => {\n        //     dispatch(onPostChangeActionCreator(text))\n        // DO NOT NEED THIS WITH FORMIK\n        // }\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__Duu-d\"};","import React from \"react\"\nimport Preloader from './../../Users/826.gif'\nconst image = \"https://e1.pxfuel.com/desktop-wallpaper/214/623/desktop-wallpaper-dark-pfp-dark.jpg\"\n\nconst ProfileInfo = (props) => {\n\n    return (\n        (!props.Profile ? <img src={Preloader} alt=\"\" /> :\n            (\n                !props.Profile.photos.small ?\n                    <div>\n                        <img width='100px' height='100px' src={image}></img>\n                        <h1 color=\"white\">{props.Profile.UserName}</h1>\n                    </div> :\n                    < div >\n                        <img src={props.Profile.photos.small} alt=\"\" />\n                        <h1 color=\"white\">{props.Profile.UserName}</h1>\n                    </div >\n            )\n        )\n    )\n}\nexport default ProfileInfo","import React, { useEffect, useState } from \"react\"\n\nconst ProfileStatus = (props) => {\n    const [status, upSetStatus] = useState(props.status)\n    const [editMode, toggleEditMode] = useState(false)\n\n    let onUpdateStatus = (e) =>{\n        props.updateStatus(e.target.value)\n\n\n    }\n    useEffect(()=>{\n        upSetStatus(props.status)\n\n    },[props.status])\n\n    \n    let editModeAC = (TF)=>{\n        toggleEditMode(TF)\n    }\n    \n    return (\n        <div>\n            {(!editMode\n                 ?<span onDoubleClick={()=>{editModeAC(true)}}>{(['',null,undefined].includes(status) ?\"Write Your Status Here\" :status)}</span>\n                 :<input onChange={onUpdateStatus} onBlur={()=>{editModeAC(false)}} value={status} type=\"text\"></input>)}\n        </div>\n    )\n}\nexport default ProfileStatus","import MyPostsContainer from './Posts/myPostsContainer';\nimport classes from './Profile.module.css'\nimport React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport ProfileStatus from './ProfileInfo/ProfileStatus';\nconst Profile = (props) => {\n    return (\n        <div className={classes.content}>\n            <ProfileInfo Profile = {props.Profile}/>\n            <ProfileStatus Profile = {props.Profile} status = {props.status} updateStatus = {props.updateStatus} />\n            <MyPostsContainer/>\n        </div>\n\n    )\n}\nexport default Profile","import Profile from \"./Profile\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfileUsersThunk, getStatusThunk, updateStatusThunk } from \"../../redux/reducers/ProfileReducer\";\nimport { useParams } from \"react-router-dom\";\nimport { WithoutRedirectComponent } from \"../HOC/redirectComponent\";\nimport { compose } from \"redux\";\n\n\nconst ProfileContainer = React.memo((props) => {\n    let { userId } = useParams();\n    let {getProfile,getStatus,} = props\n    if (!userId || userId === null) {\n        userId = 29401\n    }\n    useEffect(() => {\n        getProfile(userId)\n        getStatus(userId)\n    }, [userId]);\n\n    return (\n        <Profile {...props} Profile={props.Profile} status={props.status} updateStatus={props.updateStatus} />\n\n    )\n})\n\nlet mapStateToProps = (state) => {\n    return {\n        Profile: state.ProfilePage.profile,\n        status: state.ProfilePage.status\n\n    }\n}\nlet mapDispatchToProps = {\n    getProfile: getProfileUsersThunk,\n    getStatus: getStatusThunk,\n    updateStatus: updateStatusThunk,\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithoutRedirectComponent,\n)(ProfileContainer)\n"],"names":["props","_jsxs","className","classes","children","_jsx","src","alt","post","postElements","_toConsumableArray","ProfilePage","Posts","reverse","map","p","Post","message","id","Formik","initialValues","newPostText","onChange","console","log","onSubmit","values","_ref","text","setSubmitting","addNewPost","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onBlur","value","disabled","connect","state","dispatch","addPostActionCreator","MyPosts","Profile","photos","small","color","UserName","width","height","Preloader","_useState","useState","status","_useState2","_slicedToArray","upSetStatus","_useState3","_useState4","editMode","toggleEditMode","useEffect","editModeAC","TF","e","updateStatus","target","onDoubleClick","undefined","includes","ProfileInfo","ProfileStatus","MyPostsContainer","ProfileContainer","React","userId","useParams","getProfile","getStatus","_objectSpread","mapDispatchToProps","getProfileUsersThunk","getStatusThunk","updateStatusThunk","compose","profile","WithoutRedirectComponent"],"sourceRoot":""}